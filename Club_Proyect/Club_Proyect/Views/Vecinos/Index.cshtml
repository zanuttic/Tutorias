@model Paginacion<Club_Proyect.Entities.Vecino>

@{
    ViewData["Title"] = "Index";
}

<h1>Vecinos</h1>

<p>
    <a asp-action="Create">Crear Vecino</a>
</p>

<form asp-action="Index" method="get">
    <div class="form-action no-Color">
        <p>
            Filtro de busqueda: <input type="text" name="searchString" value="@ViewData["CurrentFilter"]" />
            <input type="submit" value="Buscar" class="btn btn-default" />
            <a asp-action="Index">Reiniciar Filtro de Busqueda</a>| Registros Mostrados @Model.TotalR
        </p>
    </div>

</form>

<div class="table-responsive">
    <table class="table">
        <thead>
            <tr>
                <th>
                    Nombre
                </th>
                <th>
                    Apellido
                </th>
                <th>
                    telefono
                </th>

                <th>
                    DNI
                </th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.persona.Nombre)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.persona.Apellido)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.telefono)
                </td>

                <th>
                    @Html.DisplayFor(modelItem => item.persona.DNI)
                </th>
                <td>
                    <a asp-action="Edit" asp-route-id="@item.Id">Editar</a> |
                    <a asp-action="Details" asp-route-id="@item.Id">Detalles</a> |
                    <a asp-action="Delete" asp-route-id="@item.Id">Eliminar</a>
                </td>
            </tr>
            }
        </tbody>
    </table>
</div>
@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}
<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-value="@(Model.PageIndex - 1)"
   asp-route-currenFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @prevDisabled">
    Anterior
</a>
@for (int i = 1; i <= Model.TotalPages; i++)
{
    <a asp-action="Index"
       asp-route-sortOrder="@ViewData["CurrentSort"]"
       asp-route-value="@i"
       asp-route-currenFilter="@ViewData["CurrentFilter"]"
       class="btn btn-default">
        @i
    </a>
}
<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-value="@(Model.PageIndex + 1)"
   asp-route-currenFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @nextDisabled">
    Siguiente
</a>
